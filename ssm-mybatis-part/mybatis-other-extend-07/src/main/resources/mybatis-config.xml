<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <settings>
        <!--    开启了mybatis的日志输出，选择使用system进行控制台输出-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!--    开启驼峰式自动映射 数据库 a_column java aColumn-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--    resultMap 标签 有没有嵌套都会自动帮我们映射result标签的属性和列-->
        <setting name="autoMappingBehavior" value="FULL"/>
    </settings>

    <!--    定义自己类的别名-->
    <typeAliases>
        <!--    单独定义-->
        <!--            <typeAlias type="com.atguigu.pojo.Employee" alias="employee" />-->
        <!--    批量将包下的类给予别名，别名就是类的所有首字母小写-->
        <package name="com.atguigu.pojo"/>
    </typeAliases>

    <!--    mybatis内部配置插件，可以sql语句拦截了-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!--    插件语法对应的数据库类型-->
            <property name="helperDialect" value="mysql"/>
        </plugin>
    </plugins>

    <!-- environments表示配置Mybatis的开发环境，可以配置多个环境，在众多具体环境中，使用default属性指定实际运行时使用的环境。default属性的取值是environment标签的id属性的值。 -->
    <environments default="development">
        <!-- environment表示配置Mybatis的一个具体的环境 -->
        <environment id="development">
            <!-- Mybatis的内置的事务管理器 -->
            <transactionManager type="JDBC"/>
            <!-- 配置数据源
                type=POOLED mybatis帮助我们维护一个连接池 | UNPOOLED 每次都新建成或者释放连接
            -->
            <dataSource type="POOLED">
                <!-- 建立数据库连接的具体信息 -->
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis-example?allowMultiQueries=true"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!-- Mapper注册：指定Mybatis映射文件的具体位置 -->
        <!-- mapper标签：配置一个具体的Mapper映射文件 -->
        <!-- resource属性：指定Mapper映射文件的实际存储位置，这里需要使用一个以类路径根目录为基准的相对路径 -->
        <!--    对Maven工程的目录结构来说，resources目录下的内容会直接放入类路径，所以这里我们可以以resources目录为基准 -->
        <!--    <mapper resource="mappers/EmployeeMapper.xml"/>-->
        <!--    批量mapper指定
                    1.要求Mapper.xml文件和mapper接口的命名必须相同
                    2.最终打包后的位置要一致 都是指定的包地址下！
                        方案1：xml文件也加入到接口所在的包即可 [不推荐]
                        方案2：resources文件夹创建对应的文件夹结构即可
                    注意：resources下直接创建多层文件夹 使用/分隔  .就是一层文件夹
        -->
        <package name="com.atguigu.mapper"/>
    </mappers>

</configuration>